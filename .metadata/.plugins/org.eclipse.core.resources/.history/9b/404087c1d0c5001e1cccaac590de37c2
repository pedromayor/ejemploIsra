package main;

import java.net.Socket;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.io.IOException;
import java.io.File;
import java.io.FileInputStream;
import java.io.PrintWriter;

import java.util.Scanner;
import java.util.stream.Stream;


public class HCliente extends Thread {
	private Socket clienteSocket;
	
	//Constructor para la conexion de clientes	
	public HCliente(Socket clienteSocket) {
		this.clienteSocket = clienteSocket;
	}
	
	@Override
	public void run() {
    	try (
			Scanner datosRecibidos = new Scanner(clienteSocket.getInputStream());
			PrintWriter datosEnviados = new PrintWriter(clienteSocket.getOutputStream(), true)
    	){
    		boolean autorizado = false;
    		while (!autorizado) {
        		//Solicitamos usuario
        		datosEnviados.println("Ingrese su usuario:");
        		String usuarioRecibido = datosRecibidos.nextLine();
        		datosEnviados.println("Ingrese su contraseña:");
        		String pwRecibida = datosRecibidos.nextLine();
        		
        		
        		int  auth = Servidor.checkAuth(usuarioRecibido,pwRecibida);
        		System.out.println(auth);

        		if(auth == 0) {
        			datosEnviados.println("Usuario o contraseña incorrectos");
        		}
        		else if(auth == 1) {
        			datosEnviados.println("Este usuario ya esta loggeado");
        		}
        		else if(auth == 2) {
        			datosEnviados.print("----- Bienvenido -----");
        			autorizado = true;
        		}
			}
    		
    		while (true) {
    			System.out.println("Seleccione nombre de archivo o escriba salir");
    			
    			String directorio= "./src/directorioFicheros/";
    			Stream<Path> miStream = Files.walk(Paths.get(directorio.toString()));
    			for (miStream : stream) {
					
				}
    		}

    		
    		//String archivoRuta= "./src/directorioFicheros/"+archivoSolicitado;

    		/*
    		File archivo = new File(archivoRuta);
    		
    		//Comprobamos que el archivo exista
    		if (archivo.exists()) {
    			datosEnviados.println("El archivo Existe");
    			
        		//Si el archivo existe lo mandamos con este bucle
    		    try (FileInputStream fis = new FileInputStream(archivo)) {
    		        byte[] buffer = new byte[4096];
    		        int bytesRead;
    		        while ((bytesRead = fis.read(buffer)) != -1) {
    		        	clienteSocket.getOutputStream().write(buffer, 0, bytesRead);
    		        }
    		    }
				
			} else {
				//Si el archivo No Existe mandamos una notificacion y salimos
    			datosEnviados.println("El archivo No Existe");

			}
    		*/
    		
		} catch (Exception e) {e.printStackTrace();
	    
		} finally {
	        try {
				Thread.sleep(2000);
	            clienteSocket.close();
	            System.out.println("El cliente se ha desconectado.");
	        } catch (IOException | InterruptedException e) {e.printStackTrace();}
	    }
		
	}
}
